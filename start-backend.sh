#!/bin/bash

echo "üöÄ Iniciando backend con Cloudflare Tunnel..."

# Funci√≥n para limpiar procesos al salir
cleanup() {
    echo "üîÑ Deteniendo procesos..."
    pkill -f cloudflared
    pkill -f node
    exit 0
}

# Capturar se√±ales de terminaci√≥n
trap cleanup SIGTERM SIGINT

# ID del tunnel espec√≠fico
TUNNEL_ID="a53ca783-fbc3-4ad3-bdb5-7d3ca92188ac"

# Crear archivo de credenciales si tenemos los datos
if [ -n "$CLOUDFLARE_CREDENTIALS" ]; then
    echo "‚úÖ Credenciales encontradas, creando archivo..."
    
    # Escribir credenciales al archivo con el ID espec√≠fico
    echo "$CLOUDFLARE_CREDENTIALS" > /root/.cloudflared/$TUNNEL_ID.json
    
    echo "üöá Iniciando tunnel con credenciales..."
    cloudflared tunnel --config /root/.cloudflared/config.yml run &
    TUNNEL_PID=$!
    echo "üöá Tunnel iniciado con PID: $TUNNEL_PID"
    
    # Esperar que el tunnel se establezca
    echo "‚è≥ Esperando que el tunnel se establezca..."
    sleep 15
    
    echo "üîç Verificando estado del tunnel..."
    if ps -p $TUNNEL_PID > /dev/null; then
        echo "‚úÖ Tunnel funcionando correctamente"
        
        # Verificar conectividad a la base de datos a trav√©s del tunnel
        echo "üîç Verificando conectividad a BD..."
        sleep 5
    else
        echo "‚ùå Error: Tunnel no se inici√≥ correctamente"
        # Mostrar logs para debug
        echo "üìã Logs del tunnel:"
        tail -20 /var/log/cloudflared.log 2>/dev/null || echo "No se encontraron logs"
    fi
    
elif [ -n "$CLOUDFLARE_TUNNEL_TOKEN" ]; then
    echo "‚úÖ Token encontrado, iniciando tunnel..."
    cloudflared tunnel run --token $CLOUDFLARE_TUNNEL_TOKEN &
    TUNNEL_PID=$!
    echo "üöá Tunnel iniciado con PID: $TUNNEL_PID"
    
    # Esperar que el tunnel se establezca
    echo "‚è≥ Esperando que el tunnel se establezca..."
    sleep 10
    
else
    echo "‚ö†Ô∏è No hay credenciales del tunnel - funcionar√° solo localmente"
fi

# Iniciar el servidor backend
echo "üöÄ Iniciando servidor backend..."
exec node backend-server-fixed.cjs 